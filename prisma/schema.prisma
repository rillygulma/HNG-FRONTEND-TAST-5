generator client {
    provider = "prisma-client-js"
    previewFeatures = ["jsonProtocol"]
}

datasource db {
  provider = "postgresql"
  url      = env("POSTGRES_PRISMA_URL")
  directUrl = env("POSTGRES_URL_NON_POOLING")
}

model Link {
  id            String       @default(cuid()) @id
  platform      String       
  url           String       
  createdAt     DateTime     @default(now()) @map(name: "created_at")
  updatedAt     DateTime     @updatedAt @map(name: "updated_at")
  user          User         @relation(fields: [userId], references: [id])
  userId        String       @map(name: "user_id")
  @@map(name: "links")
}

model User {
  id            String       @default(cuid()) @id
  username      String       @unique
  firstname     String?
  lastname      String?
  email         String       @unique
  password      String?
  profileImage  String?
  userUrl       String?       
  createdAt     DateTime     @default(now()) @map(name: "created_at")
  updatedAt     DateTime     @updatedAt @map(name: "updated_at")
  links         Link[]

  accounts      Account[]
  sessions      Session[]

  resetToken           String?   @db.Text
  resetTokenExpiry     DateTime?

  @@map(name: "users")
}

model Account {
  id                 String    @id @default(cuid())
  userId             String
  type               String
  provider           String
  providerAccountId  String
  refresh_token      String?   @db.Text
  refresh_token_expires_in Int?
  access_token       String?  @db.Text
  expires_at         Int?
  token_type         String?
  scope              String?
  id_token           String? @db.Text
  session_state      String?
  user               User      @relation(fields: [userId], references: [id])

  @@unique([provider, providerAccountId])
}
model Session {
  id            String   @id @default(cuid())
  sessionToken  String   @unique
  userId        String
  expires       DateTime
  user          User     @relation(fields: [userId], references: [id])

  @@map(name: "sessions")
}